-- #Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES



-- #Explore all columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_products'

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'fact_sales'



-- #Dimensions Exploration

-- 1. Explore all countries of customers
SELECT DISTINCT country FROM dim_customers

-- 2. Explore all categories 'Major Divisions'
SELECT DISTINCT category, subcategory, product_name FROM dim_products
ORDER BY 1, 2, 3



-- #Date Exploration 

-- 1a. First and last order
-- 1b. How many years of sales are available
SELECT
	MIN(order_date) first_order_date,
	MAX(order_date) last_order_date,
	DATEDIFF(year, MIN(order_date), MAX(order_date)) AS order_range_years,
	DATEDIFF(month, MIN(order_date), MAX(order_date)) AS order_range_months
FROM fact_sales

-- 2. The youngest and oldest customer
SELECT
	MIN(birthdate) as oldest_birthdate,
	DATEDIFF(year, MIN(birthdate), GETDATE()) as oldest_age,
	MAX(birthdate) as youngest_birthdate,
	DATEDIFF(year, MAX(birthdate), GETDATE()) as youngest_age
FROM dim_customers



-- #Measures Exploration

-- 1. Total sales
SELECT SUM(sales_amount) as total_sales FROM fact_sales

-- 2. How many items are sold
SELECT SUM(quantity) as total_quantity FROM fact_sales

-- 3. Average selling price
SELECT AVG(price) as avg_price FROM fact_sales

-- 4. Total number of orders
SELECT COUNT(DISTINCT order_number) as total_orders FROM fact_sales

-- 5. Total number of customers
SELECT COUNT(customer_key) as total_customers FROM dim_customers

-- 6. Total number of products
SELECT COUNT(DISTINCT product_name) as total_customers FROM dim_products

-- 7. Total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) as total_customers FROM fact_sales



-- #Report of the key metrics of the business

SELECT 'Total Sales' as measure_name, SUM(sales_amount) as measure_value FROM fact_sales
UNION ALL
SELECT 'Total Quantity' as measure_name, SUM(quantity) as measure_value FROM fact_sales
UNION ALL
SELECT 'Average Price' as measure_name, AVG(price) as measure_value FROM fact_sales
UNION ALL
SELECT 'Total Nr. Orders' as measure_name, COUNT(DISTINCT order_number) as total_orders FROM fact_sales
UNION ALL
SELECT 'Total Nr. Products' as measure_name, COUNT(DISTINCT product_name) as total_customers FROM dim_products
UNION ALL
SELECT 'Total Nr. Customers' as measure_name, COUNT(customer_key) as total_customers FROM dim_customers



-- #Magnitude Exploration

-- 1. Total customers by countries
SELECT
	country,
	COUNT(customer_key) as total_customers
FROM dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- 2. Total customers by gender
SELECT
	gender,
	COUNT(customer_key) as total_customers
FROM dim_customers
GROUP BY gender
ORDER BY total_customers DESC

-- 3. Total products by category
SELECT
	category,
	COUNT(product_key) as total_products
FROM dim_products
GROUP BY category
ORDER BY total_products DESC

-- 4. Average cost in each category
SELECT
	category,
	AVG(cost) as avg_costs
FROM dim_products
GROUP BY category
ORDER BY avg_costs DESC

-- 5. Total revenue generated by each category
SELECT
	p.category,
	SUM(f.sales_amount) as total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC

-- 6. Total revenue generated by each customer
SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(f.sales_amount) as total_revenue
FROM fact_sales f
LEFT JOIN dim_customers c
ON c.customer_key = f.customer_key
GROUP BY 
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_revenue DESC

-- 7. Distribution of sold items across countries
SELECT 
	c.country,
	SUM(f.quantity) as total_items_sold
FROM fact_sales f
LEFT JOIN dim_customers c
ON c.customer_key = f.customer_key
GROUP BY country
ORDER BY total_items_sold DESC



-- #Rank Exploration

-- 1. Show 5 products generate the highest revenue
SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) as total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) as total_revenue,
	ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount) DESC) AS rank_products
FROM fact_sales f
LEFT JOIN dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name

-- 2. Show 5 worst performing products in terms of sales
SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) as total_revenue
FROM fact_sales f
LEFT JOIN dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue

SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) as total_revenue,
	ROW_NUMBER() OVER (ORDER BY SUM(f.sales_amount)) AS rank_products
FROM fact_sales f
LEFT JOIN dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name

-- 3. Show top 10 customers who have generated the highest revenue
SELECT TOP 10
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(f.sales_amount) as total_revenue
FROM dim_customers c
LEFT JOIN fact_sales f
ON f.customer_key = c.customer_key
GROUP BY
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_revenue DESC

-- 4. Show 3 customers with the fewest orders placed
SELECT TOP 3
	c.customer_key,
	c.first_name,
	c.last_name,
	COUNT(DISTINCT order_number) as total_orders
FROM fact_sales f
LEFT JOIN dim_customers c
ON c.customer_key = f.customer_key
GROUP BY
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_orders